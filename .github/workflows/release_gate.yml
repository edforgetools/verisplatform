name: Release Gate
on:
  push:
    branches: [main]

# Auto-cancel in-progress runs when a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Wait for current E2E run to complete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Waiting for current E2E run to complete..."
          while true; do
            CURRENT_RUN=$(gh run list --workflow=e2e.yml --limit=1 --json status,conclusion --jq '.[0]')
            STATUS=$(echo "$CURRENT_RUN" | jq -r '.status')
            CONCLUSION=$(echo "$CURRENT_RUN" | jq -r '.conclusion')
            
            if [ "$STATUS" = "completed" ]; then
              echo "E2E run completed with conclusion: $CONCLUSION"
              break
            fi
            
            echo "E2E run status: $STATUS, waiting..."
            sleep 30
          done

      - name: Check last 3 runs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the last 5 runs to account for cancelled runs due to concurrency
          RUNS=$(gh run list --workflow=e2e.yml --limit=5 --json conclusion --jq '.[].conclusion')
          
          # Count non-cancelled results
          NON_CANCELLED=$(echo "$RUNS" | grep -v "cancelled" || true)
          
          if [ -z "$NON_CANCELLED" ]; then
            echo "No completed runs found yet"
            echo "Gate passed (waiting for first run)"
            exit 0
          fi
          
          # Check if any non-cancelled runs failed
          NON_SUCCESS=$(echo "$NON_CANCELLED" | grep -v "success" || true)
          
          if [ -n "$NON_SUCCESS" ]; then
            echo "Not all recent runs passed"
            echo "$NON_SUCCESS"
            exit 1
          else
            echo "Gate passed"
          fi
